// VigenereCode.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <conio.h>
#include "windows.h"
#include <iostream>
#include <string>
#include <conio.h>
#include <stdlib.h>
#pragma warning(disable :4996)

using namespace std;

char buf[256];
int length=0,len=0;
string res_string="";
int x=0,y=0;

bool flag=false;
char key[128];
char tmp[128];
int len_of_key=0;
int len_of_k=0;
char rect[26]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
char tabula_recta[26][26];

int _tmain(int argc, char* argv[])
{


	// генерация tabularecta
	int shift=0;

	for (int i = 0; i < 26; i++)
		for (int j = 0; j < 26; j++)
		{
			shift = j + i;
			if (shift >= 26) shift = shift % 26;
			tabula_recta[i][j] = rect[shift];
		}

		for (int i = 0; i < 26; i++)
		{
			for (int j = 0; j < 26; j++)
			{
				printf("%c",tabula_recta[i][j]);
			}
			printf("\n");
		}

		system("pause");
		system("cls");

		// запись в файл tabularecta
		FILE *Rect=fopen("Rect.txt","w");

		for (int i = 0; i < 26; i++)
		{
			for (int j = 0; j < 26; j++)
			{
				fprintf(Rect,"%c ",tabula_recta[i][j]);
			}
			fprintf(Rect,"\n\n");
		}

		fclose(Rect);

		// чтение из файла входного сообщения
		FILE *In=fopen("in.txt","r");

		if (In==NULL)
		{
			printf("Error: in file not found\n");
			return 0;
		}

		while (!feof(In))
		{
			fgets(buf,256,In);
		}
		fclose(In);

		len=strlen(buf);

		// ввод и формирования ключа
		printf("\nEnter key\n key: ");
		gets(key);
		len_of_key=strlen(key);
		for (int i = 0; i < len_of_key; i++)
		{
			tmp[i]=key[i];
		}

		while(len_of_k<len)
		{
			for (int i = 0; i < len_of_key; i++)
			{
				key[i+len_of_k]=tmp[i];
			}
			len_of_k=strlen(key);
		}



		// вывод ключа на экран
		printf("\nKey: ");
		for (int i = 0; i < len; i++)
		{
			printf("%c",key[i]);
		}
		printf("\n");
		system("pause");



		// шифр входного сообщения и запись его в выходной файл
		FILE *Out=fopen("out.txt","w");
		int l=0;
		for(int i = 0; i < len ; i++)
		{
			l=0;
			flag=false;
			while(l < 26&&flag==false)
			{
				if(key[i]==rect[l])
				{
					x=l;
					flag=true;
				}
				l++;
			}

			l=0;

			flag=false;

			while (l < 26 && flag==false)
			{
				if(buf[i]==rect[l])
				{
					y=l;
					flag=true;
				}
				l++;
			}
			res_string+=tabula_recta[x][y];
		}
		fprintf(Out,"%s",res_string.c_str());
		printf("%s",res_string.c_str());
		fclose(Out);

		printf("\nFinish...press any key\n");
		getch();
		return 0;
}

